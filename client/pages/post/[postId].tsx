import { Container } from "@nextui-org/react";
import { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import { connect } from "react-redux";
import { getSinglPost } from "../../axiosClient/feed.api";
import FeedItem from "../../components/FeedItem";
import protectedRoute from "../../hocs/protectedRouter";
import { IFeed } from "../../interface/feedItem.interface";
import { IAuthenciateState } from "../../store/interface/authenticate.interface";
import { IRootState } from "../../store/interface/root.interface";

interface Props {
  authenticateReducer: IAuthenciateState;
}

const SinglePostPage: NextPage<Props> = ({ authenticateReducer }) => {
  const router = useRouter();
  const { token, user } = authenticateReducer;
  const { postId } = router.query;
  const [post, setPost] = useState<IFeed>();

  const loadPost = useCallback(async () => {
    if(postId) {
        const { data, status } = await getSinglPost(token, postId);
        if (status === 200) {
          setPost(data.data);
        }
    }
  }, [token, postId]);

  useEffect(() => {
    loadPost();
  }, [loadPost])

  return (
    <Container xs fluid css={{ marginTop: 100 }}>
      <Head>
        <title>Post | {post?.author.fullname}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {post && <FeedItem currentUser={user} item={post} token={token} />}
    </Container>
  );
};

const mapStateToProps = (state: IRootState) => {
  return {
    authenticateReducer: state.authenticateReducer,
  };
};

export default connect(mapStateToProps)(protectedRoute(SinglePostPage));
